Nick:
Requirements:
	Know how header files work
	Know what an enum is
	How C works (basic knowledge)
	Know how to use macros
	understand malloc and calloc and free() (heap memory allocationa and deallocation)
	understand C arrays and how to use an array degraded to a pointer

Assignment:
	create functions that do the following:
		SaveState* SS_new(const char* path);
		This should create a SaveState on heap (with space for a const char* and a sizeof(unsigned) * SS_GameContents_size array, setting the savePath to path. then using the SS_read func write the contents of the file at the savePath into the array.


		SaveState* SS_blank(void);
		Does the same as SS_new exept savePath = "" and all elements of the gameContents array are zeroed.


		void SS_read(SaveState* state);
		using FILE* read the contents of the file of the state passed in into a char array buffer. iterate using for( < SS_GameContents_count) and read the buffer untill the break key is reached, store that as a number in the current gameContents element. SO SAY THE FILE CONTAINED THIS:
		1;23;445;5;

		this should be translated into gamecontents as such (each segment is an element in the array):
		-----------------
		|  1| 23|445|  5|
		-----------------


		void SS_write(SaveState* state);
		using FILE* it should write to the states savePath in the following format (where ; is the break key to be decoded by read):
		-----------------
		|  1| 23|445|  5|
		-----------------
		becomes:
		1;23;445;5;


		void SS_delete(SaveState* state);
		using free() frees all allocated memory in heap for all member variables and pointers and the state itself (look this up as its the easiest function to write even though it seems complicated)


Best of luck nick here is the files
also if your confused how to run it:

save.c includes save.h
main.c includes save.h

(main.c wont be incorporated into the engine so it should be purly used for testing(this would make sense if you understand including files))